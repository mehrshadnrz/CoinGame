# Generated by Django 5.2.4 on 2025-08-11 16:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tokens', '0003_alter_gamingtoken_created_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='tokenupdaterequest',
            options={'verbose_name': 'Token Update Request', 'verbose_name_plural': 'Token Update Requests'},
        ),
        migrations.CreateModel(
            name='TokenListingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('TOP_TOKEN', 'Top Token'), ('GAMING_TOKEN', 'Gaming Token')], max_length=32, verbose_name='Token Kind')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('symbol', models.CharField(max_length=10, unique=True, verbose_name='Symbol')),
                ('trading_view_symbol', models.CharField(max_length=10, verbose_name='TradingView Symbol')),
                ('token_icon', models.ImageField(blank=True, null=True, upload_to='token_icons/', verbose_name='Token Icon')),
                ('about_token', models.TextField(blank=True, null=True, verbose_name='About Token')),
                ('network', models.CharField(max_length=100, verbose_name='Network')),
                ('pool_address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Pool address')),
                ('base_token', models.CharField(blank=True, max_length=256, null=True, verbose_name='Base Token')),
                ('quote_token', models.CharField(blank=True, max_length=256, null=True, verbose_name='Quote Token')),
                ('binance_symbol', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Binance Symbol')),
                ('token_type', models.CharField(blank=True, choices=[('TOP_TOKEN', 'Top Token'), ('GAME_RELATED_TOKEN', 'Game Related Token')], max_length=32, null=True, verbose_name='Type')),
                ('coingecko_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='CoinGecko ID')),
                ('trading_guide_url', models.URLField(blank=True, null=True, verbose_name='Trading Guide URL')),
                ('news_url', models.URLField(blank=True, null=True, verbose_name='News URL')),
                ('telegram_url', models.URLField(blank=True, null=True, verbose_name='Telegram URL')),
                ('twitter_url', models.URLField(blank=True, null=True, verbose_name='Twitter URL')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name='Website URL')),
                ('token_contract_url', models.URLField(blank=True, null=True, verbose_name='Token Contract URL')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10, verbose_name='Status')),
                ('admin_note', models.TextField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_listing_requests', to=settings.AUTH_USER_MODEL, verbose_name='Processed By')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listing_requests', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token Listing Request',
                'verbose_name_plural': 'Token Listing Requests',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('kind', 'GAMING_TOKEN'), ('pool_address__isnull', False), models.Q(('pool_address', ''), _negated=True), ('network__isnull', False), models.Q(('network', ''), _negated=True)), models.Q(('kind', 'TOP_TOKEN'), ('binance_symbol__isnull', False), models.Q(('binance_symbol', ''), _negated=True), ('token_type__isnull', False), models.Q(('token_type', ''), _negated=True), ('coingecko_id__isnull', False), models.Q(('coingecko_id', ''), _negated=True)), _connector='OR'), name='token_listing_request_kind_required_fields')],
            },
        ),
    ]
